#!/bin/bash

SERVER_DIR="/home/minecraft/server"

force=false

usage() {
    echo "Usage: $(basename "$0") [-f] [archive]"
    echo
    echo "Options:"
    echo "  -f       Force stop and restart the server without confirmation."
    echo "  archive  The path to the backup archive to restore."
    exit 1
}

restore() {
    printf "Restoring $(basename \"$1\")... "
    
    rm -r "$SERVER_DIR/world" "$SERVER_DIR/world_nether" "$SERVER_DIR/world_the_end"
    
    if tar -xzf "$1" -C "$SERVER_DIR"; then
        echo "done!"
    else
        echo "Error: Failed to extract the archive."
        exit 1
    fi
}

confirm() {
    read -rp "Restoring $(basename \"$1\") will remove all current server data. Do you wish to continue? [y/N] " confirm
    [[ "$confirm" =~ ^[Yy]$ ]]
}

while getopts ":f" opt; do
    case "$opt" in
        f)
            force=true
            ;;
        ?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 )) # Move to the next non-option argument

# Check if the archive file is provided
if (( $# == 0 )); then
    echo "Error: Archive file must be provided."
    usage
fi

# Check if the provided archive file exists
if [[ ! -f "$1" ]]; then
    echo "Error: Archive file \"$1\" does not exist."
    exit 1
fi

if screen -ls | grep -qF "minecraft-server"; then
    if [[ $force == true ]]; then
        /home/minecraft/scripts/stop
        restore "$1"
        /home/minecraft/scripts/start
    else
        echo "Error: Server is running. Stop the server before restoring."
        exit 1
    fi
else
    if [[ $force == true ]] || confirm "$1"; then
        restore "$1"
    else
        echo "Aborting..."
    fi
fi
